library(igraph)
g<-make_ring(10)
plot(g)
q<-delete.edges(g,E(g)[1%->%2])
plot(q)
E(g)[3%->%4]
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/rewiring_with_fermi_function.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/make_Social_network_watts_storage.R')
net<-make.random.social.network(10)
net
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/make_Social_network_watts_storage.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/setDiffuser_Competitive.R')
net<-set.diffuser(net,10)
x<-find_oldFriend_based_fermi(net,134)
x
x<-find_newFriend_based_fermi(net,134)
x
net<-make_friendship(net,134)
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/rewiring_with_fermi_function.R')
net<-make_friendship(net,134)
plot(net)
net<-rewiring(net)
net<-rewiring(net)
net<-rewiring(net)
net<-rewiring(net)
net<-rewiring(net)
list_of_neighbors_i<-neighbors(net,4)
list_of_neighbors_i
class(list_of_neighbors_i)
dissagree_neighbors_i<-V(net)[color!=V(net)[4]$color & V(net) %in% list_of_neighbors_i]
list_of_neighbors_i[which.min(degree(net,dissagree_neighbors_i))]
x<-list_of_neighbors_i[which.min(degree(net,dissagree_neighbors_i))]
x
x[1]
type.convert(x)
class(type.convert(x))
net<-rewiring(net)
class(find_oldFriend_based_fermi(net,4))
class(find_newFriend_based_fermi(net,4)
)
x<-find_oldFriend_based_fermi(net,4)
x
type.convert(x)
y<-(integer(x))
y
x
net
V(net)[x]
V(net)[x].att
as_ids(x)
class(as_ids(x))
debugSource('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/rewiring_with_fermi_function.R')
x<-find_oldFriend_based_fermi(net,4)
x
net<-rewiring(net)
net<-rewiring(net)
net
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/simulator_luncher.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/setDiffuser_Competitive.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/set_Action_probability_vector.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/rewiring_with_fermi_function.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/report_model.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/make_Social_network_watts_storage.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/choose_action.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/calculate_penalty.R')
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/action_probability_claculation.R')
simulator_luncher(10,10,10,0.001)
net
V(net)$action_prob_red
report_diffusion_condition(net,10)
node_id <-1:length(V(net))
node_id
node_id<-1:vcount(net)
node_id
a_p_r<-V(net)$action_prob_red
a_p_r
a_p_b<-V(net)$action_prob_blue
a_p_b
source('D:/Simulator_these_phase_1/Competitive_Information_Diffusion/report_model.R')
report_diffusion_condition(net,10)
length(v(net)$action_prob_red)
length(V(net)$action_prob_red)
length(V(net)$action_prob_blue)
length(V(net)$action_prob_white)
length(1:vcount(net))
length(V(net)$count_penalty_red_action)
length(V(net)$color)
report<-data.frame()
report<-data.frame(node_id,action_prob_red=V(net)$action_prob_red)
report
report<-data.frame(node_id,action_prob_red=V(net)$action_prob_red,action_prob_blue=V(net)$action_prob_blue)
reprot
report
report<-data.frame(node_id,action_prob_red=V(net)$action_prob_red,action_prob_blue=V(net)$action_prob_blue,action_prob_white=V(net)$action_prob_white)
report
report<-data.frame(node_id,action_prob_red=V(net)$action_prob_red,action_prob_blue=V(net)$action_prob_blue,action_prob_white=V(net)$action_prob_white,color=V(net)$color)
report
simulator_luncher(10,10,10,0.0001)
